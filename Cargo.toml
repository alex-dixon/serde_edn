[package]
name = "serde_edn"
version = "1.0.34" # remember to update html_root_url
authors = ["Erick Tryzelaar <erick.tryzelaar@gmail.com>", "David Tolnay <dtolnay@gmail.com>"]
license = "MIT/Apache-2.0"
description = "A edn serialization file format"
repository = "https://github.com/serde-rs/edn"
documentation = "http://docs.serde.rs/serde_edn/"
keywords = ["edn", "serde", "serialization"]
categories = ["encoding"]
readme = "README.md"
include = ["Cargo.toml", "src/**/*.rs", "README.md", "LICENSE-APACHE", "LICENSE-MIT"]

[package.metadata.docs.rs]
features = ["raw_value"]

[package.metadata.playground]
features = ["raw_value"]

[badges]
travis-ci = { repository = "serde-rs/edn" }
appveyor = { repository = "serde-rs/edn" }

[dependencies]
serde = "1.0.60"
indexmap = { version = "1.0", optional = true }
itoa = "0.4.3"
ryu = "0.2"
uuid = "0.7.4"
#serde_edn_macros = { path = "./macros" }

[dev-dependencies]
compiletest_rs = { version = "0.3", features = ["stable"] }
serde_bytes = "0.10"
serde_derive = "1.0"


### FEATURES #################################################################

[features]
default = []

# Use a different representation for the map type of serde_edn::Value.
# This allows data to be read into a Value and written back to a edn string
# while preserving the order of map keys in the input.
preserve_order = ["indexmap"]

# Use an arbitrary precision number representation for serde_edn::Number. This
# allows edn numbers of arbitrary size/precision to be read into a Number and
# written back to a edn string without loss of precision.
arbitrary_precision = []

# Provide a RawValue type that can hold unprocessed edn during deserialization.
raw_value = []
